{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        },
        "https://www.googleapis.com/auth/sqlservice.admin": {
          "description": "Manage your Google SQL Service instances"
        }
      }
    }
  },
  "basePath": "",
  "baseUrl": "https://sqladmin.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "SQL Admin",
  "description": "API for Cloud SQL database instance management",
  "discoveryVersion": "v1",
  "documentationLink": "https://developers.google.com/cloud-sql/",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
  "fullyEncodeReservedExpansion": true,
=======
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "sql:v1beta4",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://sqladmin.mtls.googleapis.com/",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
  "name": "sqladmin",
=======
  "name": "sql",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "backupRuns": {
      "methods": {
        "delete": {
          "description": "Deletes the backup taken by a backup run.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "httpMethod": "DELETE",
          "id": "sql.backupRuns.delete",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "parameters": {
            "id": {
              "description": "The ID of the Backup Run to delete. To find a Backup Run ID, use the \u003ca\nhref=\"/sql/docs/db_path/admin-api/rest/v1beta4/backupRuns/list\"\u003elist\u003c/a\u003e\nmethod.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
          "description": "Retrieves a resource containing information about a backup run.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "httpMethod": "GET",
          "id": "sql.backupRuns.get",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "parameters": {
            "id": {
              "description": "The ID of this Backup Run.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "response": {
            "$ref": "BackupRun"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Creates a new backup run on demand. This method is applicable only to Second Generation instances.",
=======
          "description": "Creates a new backup run on demand. This method is applicable only to\nSecond Generation instances.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "httpMethod": "POST",
          "id": "sql.backupRuns.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "request": {
            "$ref": "BackupRun"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Lists all backup runs associated with a given instance and configuration in the reverse chronological order of the backup initiation time.",
=======
          "description": "Lists all backup runs associated with a given instance and configuration in\nthe reverse chronological order of the backup initiation time.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "httpMethod": "GET",
          "id": "sql.backupRuns.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of backup runs per response.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of\nresults to view.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "response": {
            "$ref": "BackupRunsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "databases": {
      "methods": {
        "delete": {
          "description": "Deletes a database from a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "httpMethod": "DELETE",
          "id": "sql.databases.delete",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database to be deleted in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance.",
=======
          "description": "Retrieves a resource containing information about a database inside a Cloud\nSQL instance.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "httpMethod": "GET",
          "id": "sql.databases.get",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Database"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Inserts a resource containing information about a database inside a Cloud SQL instance.",
=======
          "description": "Inserts a resource containing information about a database inside a Cloud\nSQL instance.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "httpMethod": "POST",
          "id": "sql.databases.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists databases in the specified Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "httpMethod": "GET",
          "id": "sql.databases.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "response": {
            "$ref": "DatabasesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "patch": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.",
=======
          "description": "Partially updates a resource containing information about a database inside\na Cloud SQL instance. This method supports patch semantics.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "httpMethod": "PATCH",
          "id": "sql.databases.patch",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database to be updated in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "update": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance.",
=======
          "description": "Updates a resource containing information about a database inside a Cloud\nSQL instance.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "httpMethod": "PUT",
          "id": "sql.databases.update",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database to be updated in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "flags": {
      "methods": {
        "list": {
          "description": "List all available database flags for Cloud SQL instances.",
          "flatPath": "sql/v1beta4/flags",
          "httpMethod": "GET",
          "id": "sql.flags.list",
          "parameterOrder": [],
          "parameters": {
            "databaseVersion": {
              "description": "Database type and version you want to retrieve flags for. By default, this\nmethod returns flags for all database types and versions.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "sql/v1beta4/flags",
          "response": {
            "$ref": "FlagsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "instances": {
      "methods": {
        "addServerCa": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Add a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.",
=======
          "description": "Add a new trusted Certificate Authority (CA) version for the specified\ninstance. Required to prepare for a certificate rotation. If a CA version\nwas previously added but never used in a certificate rotation, this\noperation replaces that version. There cannot be more than one CA version\nwaiting to be rotated in.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa",
          "httpMethod": "POST",
          "id": "sql.instances.addServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "clone": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.",
=======
          "description": "Creates a Cloud SQL instance as a clone of the source instance. Using this\noperation might cause your instance to restart.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "httpMethod": "POST",
          "id": "sql.instances.clone",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "The ID of the Cloud SQL instance to be cloned (source). This does not\ninclude the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the source as well as the clone Cloud SQL instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "request": {
            "$ref": "InstancesCloneRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "delete": {
          "description": "Deletes a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "httpMethod": "DELETE",
          "id": "sql.instances.delete",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be deleted.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "demoteMaster": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
=======
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an\nexternal database server.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "httpMethod": "POST",
          "id": "sql.instances.demoteMaster",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "request": {
            "$ref": "InstancesDemoteMasterRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "export": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.",
=======
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL\ndump or CSV file.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "httpMethod": "POST",
          "id": "sql.instances.export",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be exported.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "request": {
            "$ref": "InstancesExportRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "failover": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Failover the instance to its failover replica instance. Using this operation might cause your instance to restart.",
=======
          "description": "Failover the instance to its failover replica instance. Using this\noperation might cause your instance to restart.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/failover",
          "httpMethod": "POST",
          "id": "sql.instances.failover",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/failover",
          "request": {
            "$ref": "InstancesFailoverRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
          "description": "Retrieves a resource containing information about a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "httpMethod": "GET",
          "id": "sql.instances.get",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "DatabaseInstance"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "import": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.",
=======
          "description": "Imports data into a Cloud SQL instance from a SQL dump  or CSV file in\nCloud Storage.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/import",
          "httpMethod": "POST",
          "id": "sql.instances.import",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/import",
          "request": {
            "$ref": "InstancesImportRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "insert": {
          "description": "Creates a new Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances",
          "httpMethod": "POST",
          "id": "sql.instances.insert",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project to which the newly created Cloud SQL instances\nshould belong.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists instances under a given project.",
          "flatPath": "sql/v1beta4/projects/{project}/instances",
          "httpMethod": "GET",
          "id": "sql.instances.list",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "filter": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
              "description": "A filter expression that filters resources listed in the response. The expression is in the form of field:value. For example, 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per their JSON representation, such as 'settings.userLabels.auto_start:true'. Multiple filter queries are space-separated. For example. 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly.",
=======
              "description": "A filter expression that filters resources listed in the response.\nThe expression is in the form of field:value. For example,\n'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per\ntheir JSON representation, such as 'settings.userLabels.auto_start:true'.\n\nMultiple filter queries are space-separated. For example.\n'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each\nexpression is an AND expression. However, you can include AND and OR\nexpressions explicitly.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of results to return per response.",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of\nresults to view.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project for which to list Cloud SQL instances.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances",
          "response": {
            "$ref": "InstancesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "listServerCas": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.",
=======
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified\ninstance. There can be up to three CAs listed: the CA that was used to sign\nthe certificate that is currently in use, a CA that has been added but not\nyet used to sign a certificate, and a CA used to sign a certificate that\nhas previously rotated out.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas",
          "httpMethod": "GET",
          "id": "sql.instances.listServerCas",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas",
          "response": {
            "$ref": "InstancesListServerCasResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "patch": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Updates settings of a Cloud SQL instance. This method supports patch semantics.",
=======
          "description": "Updates settings of a Cloud SQL instance.\nThis method supports patch semantics.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "httpMethod": "PATCH",
          "id": "sql.instances.patch",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "promoteReplica": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.",
=======
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance.\nUsing this operation might cause your instance to restart.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "httpMethod": "POST",
          "id": "sql.instances.promoteReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "resetSslConfig": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Deletes all client certificates and generates a new server SSL certificate for the instance.",
=======
          "description": "Deletes all client certificates and generates a new server SSL certificate\nfor the instance.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig",
          "httpMethod": "POST",
          "id": "sql.instances.resetSslConfig",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "restart": {
          "description": "Restarts a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restart",
          "httpMethod": "POST",
          "id": "sql.instances.restart",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be restarted.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restart",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "restoreBackup": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.",
=======
          "description": "Restores a backup of a Cloud SQL instance. Using this operation might cause\nyour instance to restart.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "httpMethod": "POST",
          "id": "sql.instances.restoreBackup",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "request": {
            "$ref": "InstancesRestoreBackupRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "rotateServerCa": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.",
=======
          "description": "Rotates the server certificate to one signed by the Certificate Authority\n(CA) version previously added with the addServerCA method.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa",
          "httpMethod": "POST",
          "id": "sql.instances.rotateServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa",
          "request": {
            "$ref": "InstancesRotateServerCaRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "startReplica": {
          "description": "Starts the replication in the read replica instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica",
          "httpMethod": "POST",
          "id": "sql.instances.startReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "stopReplica": {
          "description": "Stops the replication in the read replica instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica",
          "httpMethod": "POST",
          "id": "sql.instances.stopReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "truncateLog": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Truncate MySQL general and slow query log tables MySQL only.",
=======
          "description": "Truncate MySQL general and slow query log tables",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "httpMethod": "POST",
          "id": "sql.instances.truncateLog",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the Cloud SQL project.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "request": {
            "$ref": "InstancesTruncateLogRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "update": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart.",
=======
          "description": "Updates settings of a Cloud SQL instance. Using this operation might cause\nyour instance to restart.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "httpMethod": "PUT",
          "id": "sql.instances.update",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "description": "Retrieves an instance operation that has been performed on an instance.",
          "flatPath": "sql/v1beta4/projects/{project}/operations/{operation}",
          "httpMethod": "GET",
          "id": "sql.operations.get",
          "parameterOrder": [
            "project",
            "operation"
          ],
          "parameters": {
            "operation": {
              "description": "Instance operation ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/operations/{operation}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.",
=======
          "description": "Lists all instance operations that have been performed on the given Cloud\nSQL instance in the reverse chronological order of the start time.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/operations",
          "httpMethod": "GET",
          "id": "sql.operations.list",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of operations per response.",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of\nresults to view.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/operations",
          "response": {
            "$ref": "OperationsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "rescheduleMaintenance": {
              "description": "Reschedules the maintenance on the given instance.",
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "httpMethod": "POST",
              "id": "sql.projects.instances.rescheduleMaintenance",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "parameters": {
                "instance": {
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "project": {
                  "description": "ID of the project that contains the instance.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "request": {
                "$ref": "SqlInstancesRescheduleMaintenanceRequestBody"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ]
            },
            "startExternalSync": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
              "description": "Start External primary instance migration.",
=======
              "description": "Start External master migration.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync",
              "httpMethod": "POST",
              "id": "sql.projects.instances.startExternalSync",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "parameters": {
                "instance": {
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "project": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
                  "description": "ID of the project that contains the instance.",
=======
                  "description": "ID of the project that contains the first generation instance.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
                "skipVerification": {
                  "description": "Whether to skip the verification step (VESS).",
                  "location": "query",
                  "type": "boolean"
                },
                "syncMode": {
                  "description": "External sync mode.",
=======
                "syncMode": {
                  "description": "External sync mode",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ],
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
=======
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ]
            },
            "verifyExternalSyncSettings": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
              "description": "Verify External primary instance external sync settings.",
=======
              "description": "Verify External master external sync settings.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "httpMethod": "POST",
              "id": "sql.projects.instances.verifyExternalSyncSettings",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "parameters": {
                "instance": {
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "project": {
                  "description": "Project ID of the project that contains the instance.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "syncMode": {
                  "description": "External sync mode",
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ],
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
=======
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
                  "location": "query",
                  "type": "string"
                },
                "verifyConnectionOnly": {
                  "description": "Flag to enable verifying connection only",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "response": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ]
            }
          }
        }
      }
    },
    "sslCerts": {
      "methods": {
        "createEphemeral": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
=======
          "description": "Generates a short-lived X509 certificate containing the provided public key\nand signed by a private key specific to the target instance. Users may use\nthe certificate to authenticate as themselves when connecting to the\ndatabase.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "httpMethod": "POST",
          "id": "sql.sslCerts.createEphemeral",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the Cloud SQL project.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "request": {
            "$ref": "SslCertsCreateEphemeralRequest"
          },
          "response": {
            "$ref": "SslCert"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "delete": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.",
=======
          "description": "Deletes the SSL certificate. For First Generation instances, the\ncertificate remains valid until the instance is restarted.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "httpMethod": "DELETE",
          "id": "sql.sslCerts.delete",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "sha1Fingerprint": {
              "description": "Sha1 FingerPrint.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.",
=======
          "description": "Retrieves a particular SSL certificate.  Does not include the private key\n(required for usage).  The private key must be saved from the response to\ninitial creation.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "httpMethod": "GET",
          "id": "sql.sslCerts.get",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "sha1Fingerprint": {
              "description": "Sha1 FingerPrint.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "response": {
            "$ref": "SslCert"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.",
=======
          "description": "Creates an SSL certificate and returns it along with the private key and\nserver certificate authority.  The new certificate will not be usable until\nthe instance is restarted.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "httpMethod": "POST",
          "id": "sql.sslCerts.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "request": {
            "$ref": "SslCertsInsertRequest"
          },
          "response": {
            "$ref": "SslCertsInsertResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists all of the current SSL certificates for the instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "httpMethod": "GET",
          "id": "sql.sslCerts.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "response": {
            "$ref": "SslCertsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "tiers": {
      "methods": {
        "list": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example, db-custom-1-3840. For related information, see Pricing.",
=======
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example,\ndb-n1-standard-1. For related information, see \u003ca\nhref=\"/sql/pricing\"\u003ePricing\u003c/a\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "flatPath": "sql/v1beta4/projects/{project}/tiers",
          "httpMethod": "GET",
          "id": "sql.tiers.list",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project for which to list tiers.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/tiers",
          "response": {
            "$ref": "TiersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "users": {
      "methods": {
        "delete": {
          "description": "Deletes a user from a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "httpMethod": "DELETE",
          "id": "sql.users.delete",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "host": {
              "description": "Host of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "name": {
              "description": "Name of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "description": "Creates a new user in a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "httpMethod": "POST",
          "id": "sql.users.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "request": {
            "$ref": "User"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists users in the specified Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "httpMethod": "GET",
          "id": "sql.users.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "UsersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "update": {
          "description": "Updates an existing user in a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "httpMethod": "PUT",
          "id": "sql.users.update",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "host": {
              "description": "Optional. Host of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "name": {
              "description": "Name of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "request": {
            "$ref": "User"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    }
  },
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
  "revision": "20210321",
=======
  "revision": "20200331",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
  "rootUrl": "https://sqladmin.googleapis.com/",
  "schemas": {
    "AclEntry": {
      "description": "An entry for an Access Control list.",
      "id": "AclEntry",
      "properties": {
        "expirationTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time when this access control entry expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The time when this access control entry expires in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#aclEntry*.",
=======
          "description": "This is always \u003ccode\u003esql#aclEntry\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "name": {
          "description": "Optional. A label to identify this entry.",
          "type": "string"
        },
        "value": {
          "description": "The allowlisted value for the access control list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiWarning": {
      "description": "An Admin API warning message.",
      "id": "ApiWarning",
      "properties": {
        "code": {
          "description": "Code to uniquely identify the warning type.",
          "enum": [
            "SQL_API_WARNING_CODE_UNSPECIFIED",
            "REGION_UNREACHABLE"
          ],
          "enumDescriptions": [
            "An unknown or unset warning type from Cloud SQL API.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "Warning when one or more regions are not reachable. The returned result set may be incomplete."
=======
            "Warning when one or more regions are not reachable.  The returned result\nset may be incomplete."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        },
        "message": {
          "description": "The warning message.",
          "type": "string"
        },
        "region": {
          "description": "The region name for REGION_UNREACHABLE warning.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupConfiguration": {
      "description": "Database instance backup configuration.",
      "id": "BackupConfiguration",
      "properties": {
        "backupRetentionSettings": {
          "$ref": "BackupRetentionSettings",
          "description": "Backup retention settings."
        },
        "binaryLogEnabled": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.",
=======
          "description": "(MySQL only) Whether binary log is enabled. If backup configuration is\ndisabled, binarylog must be disabled as well.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "boolean"
        },
        "enabled": {
          "description": "Whether this configuration is enabled.",
          "type": "boolean"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#backupConfiguration*.",
=======
          "description": "This is always \u003ccode\u003esql#backupConfiguration\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "location": {
          "description": "Location of the backup",
          "type": "string"
        },
        "pointInTimeRecoveryEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        },
        "replicationLogArchivingEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        },
        "startTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - *HH:MM*.",
          "type": "string"
        },
        "transactionLogRetentionDays": {
          "description": "The number of days of transaction logs we retain for point in time restore, from 1-7.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BackupContext": {
      "description": "Backup context.",
      "id": "BackupContext",
      "properties": {
        "backupId": {
          "description": "The identifier of the backup.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#backupContext*.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupRetentionSettings": {
      "description": "We currently only support backup retention by specifying the number of backups we will retain.",
      "id": "BackupRetentionSettings",
      "properties": {
        "retainedBackups": {
          "description": "Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.",
          "format": "int32",
          "type": "integer"
        },
        "retentionUnit": {
          "description": "The unit that 'retained_backups' represents.",
          "enum": [
            "RETENTION_UNIT_UNSPECIFIED",
            "COUNT"
          ],
          "enumDescriptions": [
            "Backup retention unit is unspecified, will be treated as COUNT.",
            "Retention will be by count, eg. \"retain the most recent 7 backups\"."
          ],
=======
          "description": "Start time for the daily backup configuration in UTC timezone in the 24\nhour format - \u003ccode\u003eHH:MM\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupRun": {
      "description": "A BackupRun resource.",
      "id": "BackupRun",
      "properties": {
        "backupKind": {
          "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.",
          "enum": [
            "SQL_BACKUP_KIND_UNSPECIFIED",
            "SNAPSHOT",
            "PHYSICAL"
          ],
          "enumDescriptions": [
            "This is an unknown BackupKind.",
            "The snapshot based backups",
            "Physical backups"
          ],
          "type": "string"
        },
        "description": {
          "description": "The description of this run, only applicable to on-demand backups.",
          "type": "string"
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Encryption configuration specific to a backup. Applies only to Second Generation instances."
        },
        "diskEncryptionStatus": {
          "$ref": "DiskEncryptionStatus",
          "description": "Encryption status specific to a backup. Applies only to Second Generation instances."
        },
        "endTime": {
          "description": "The time the backup operation completed in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "Encryption configuration specific to a backup.\nApplies only to Second Generation instances."
        },
        "diskEncryptionStatus": {
          "$ref": "DiskEncryptionStatus",
          "description": "Encryption status specific to a backup.\nApplies only to Second Generation instances."
        },
        "endTime": {
          "description": "The time the backup operation completed in UTC timezone in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "enqueuedTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time the run was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The time the run was enqueued in UTC timezone in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "error": {
          "$ref": "OperationError",
          "description": "Information about why the backup operation failed. This is only present if\nthe run has the FAILED status."
        },
        "id": {
          "description": "The identifier for this backup run. Unique only for a specific Cloud SQL\ninstance.",
          "format": "int64",
          "type": "string"
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#backupRun*.",
=======
          "description": "This is always \u003ccode\u003esql#backupRun\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "location": {
          "description": "Location of the backups.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "startTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time the backup operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The time the backup operation actually started in UTC timezone in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "status": {
          "description": "The status of this run.",
          "enum": [
            "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
            "ENQUEUED",
            "OVERDUE",
            "RUNNING",
            "FAILED",
            "SUCCESSFUL",
            "SKIPPED",
            "DELETION_PENDING",
            "DELETION_FAILED",
            "DELETED"
          ],
          "enumDescriptions": [
            "The status of the run is unknown.",
            "The backup operation was enqueued.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
            "The backup is in progress.",
            "The backup failed.",
            "The backup was successful.",
            "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
=======
            "The backup is overdue across a given backup window. Indicates a\nproblem. Example: Long-running operation in progress during\nthe whole window.",
            "The backup is in progress.",
            "The backup failed.",
            "The backup was successful.",
            "The backup was skipped (without problems) for a given backup\nwindow. Example: Instance was idle.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            "The backup is about to be deleted.",
            "The backup deletion failed.",
            "The backup has been deleted."
          ],
          "type": "string"
        },
        "type": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\". This field defaults to \"ON_DEMAND\" and is ignored, when specified for insert requests.",
=======
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\".",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
            "AUTOMATED",
            "ON_DEMAND"
          ],
          "enumDescriptions": [
            "This is an unknown BackupRun type.",
            "The backup schedule automatically triggers a backup.",
            "The user manually triggers a backup."
          ],
          "type": "string"
        },
        "windowStartTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The start time of the backup window during which this the backup was\nattempted in \u003ca href=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e\nformat, for example \u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupRunsListResponse": {
      "description": "Backup run list results.",
      "id": "BackupRunsListResponse",
      "properties": {
        "items": {
          "description": "A list of backup runs in reverse chronological order of the enqueued time.",
          "items": {
            "$ref": "BackupRun"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#backupRunsList*.",
=======
          "description": "This is always \u003ccode\u003esql#backupRunsList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide\nthis value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BinLogCoordinates": {
      "description": "Binary log coordinates.",
      "id": "BinLogCoordinates",
      "properties": {
        "binLogFileName": {
          "description": "Name of the binary log file for a Cloud SQL instance.",
          "type": "string"
        },
        "binLogPosition": {
          "description": "Position (offset) within the binary log file.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#binLogCoordinates*.",
=======
          "description": "This is always \u003ccode\u003esql#binLogCoordinates\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloneContext": {
      "description": "Database instance clone context.",
      "id": "CloneContext",
      "properties": {
        "binLogCoordinates": {
          "$ref": "BinLogCoordinates",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates."
=======
          "description": "Binary log coordinates, if specified, identify the position up to which the\nsource instance should be cloned. If not specified, the source instance is\ncloned up to the most recent binary log coordinates."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
        },
        "destinationInstanceName": {
          "description": "Name of the Cloud SQL instance to be created as a clone.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#cloneContext*.",
=======
          "description": "This is always \u003ccode\u003esql#cloneContext\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "pitrTimestampMs": {
          "description": "Reserved for future use.",
          "format": "int64",
          "type": "string"
        },
        "pointInTime": {
          "description": "Reserved for future use.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Database": {
      "description": "Represents a SQL database on the Cloud SQL instance.",
      "id": "Database",
      "properties": {
        "charset": {
          "description": "The Cloud SQL charset value.",
          "type": "string"
        },
        "collation": {
          "description": "The Cloud SQL collation value.",
          "type": "string"
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the\nAPI.",
          "type": "string"
        },
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#database*.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.",
=======
          "description": "This is always \u003ccode\u003esql#database\u003c/code\u003e.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database in the Cloud SQL instance. This does not include\nthe project ID or instance name.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google\napps domain is prefixed if applicable.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "sqlserverDatabaseDetails": {
          "$ref": "SqlServerDatabaseDetails"
        }
      },
      "type": "object"
    },
    "DatabaseFlags": {
      "description": "Database flags for Cloud SQL instances.",
      "id": "DatabaseFlags",
      "properties": {
        "name": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables for MySQL. Flags are specified with underscores, not hyphens. For more information, see Configuring Database Flags in the Cloud SQL documentation.",
          "type": "string"
        },
        "value": {
          "description": "The value of the flag. Booleans are set to *on* for true and *off* for false. This field must be omitted if the flag doesn't take a value.",
=======
          "description": "The name of the flag. These flags are passed at instance startup, so\ninclude both server options and system variables for MySQL. Flags should be\nspecified with underscores, not hyphens. For more information, see \u003ca\nhref=\"/sql/docs/mysql/flags\"\u003eConfiguring Database Flags\u003c/a\u003e in the Cloud\nSQL documentation.",
          "type": "string"
        },
        "value": {
          "description": "The value of the flag. Booleans should be set to \u003ccode\u003eon\u003c/code\u003e for true\nand \u003ccode\u003eoff\u003c/code\u003e for false. This field must be omitted if the flag\ndoesn't take a value.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseInstance": {
      "description": "A Cloud SQL instance resource.",
      "id": "DatabaseInstance",
      "properties": {
        "backendType": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": " *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type.",
=======
          "description": "\u003ccode\u003eFIRST_GEN\u003c/code\u003e: First Generation instance. MySQL only. \u003cbr\n/\u003e\u003ccode\u003eSECOND_GEN\u003c/code\u003e: Second Generation instance or PostgreSQL\ninstance. \u003cbr /\u003e\u003ccode\u003eEXTERNAL\u003c/code\u003e: A database server that is not\nmanaged by Google. \u003cbr\u003eThis property is read-only; use the\n\u003ccode\u003etier\u003c/code\u003e property in the \u003ccode\u003esettings\u003c/code\u003e object to determine\nthe database type and Second or First Generation.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ],
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ],
          "type": "string"
        },
        "connectionName": {
          "description": "Connection name of the Cloud SQL instance used in connection strings.",
          "type": "string"
        },
        "currentDiskSize": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see this announcement for details.",
=======
          "description": "The current disk usage of the instance in bytes. This property has been\ndeprecated. Users should use the\n\"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud\nMonitoring API instead. Please see \u003ca\nhref=\"https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ\"\u003ethis\nannouncement\u003c/a\u003e for details.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "int64",
          "type": "string"
        },
        "databaseVersion": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_8_0*, *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11*, *POSTGRES_12*, or *POSTGRES_13* (default). SQL Server instances: *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*.",
=======
          "description": "The database engine type and version. The \u003ccode\u003edatabaseVersion\u003c/code\u003e\nfield can not be changed after instance creation.  MySQL Second Generation\ninstances: \u003ccode\u003eMYSQL_5_7\u003c/code\u003e (default) or \u003ccode\u003eMYSQL_5_6\u003c/code\u003e.\nPostgreSQL instances: \u003ccode\u003ePOSTGRES_9_6\u003c/code\u003e (default) or\n\u003ccode\u003ePOSTGRES_11 Beta\u003c/code\u003e MySQL First Generation\ninstances: \u003ccode\u003eMYSQL_5_6\u003c/code\u003e (default) or \u003ccode\u003eMYSQL_5_5\u003c/code\u003e",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "POSTGRES_12",
            "MYSQL_8_0",
            "POSTGRES_13"
=======
            "POSTGRES_12"
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "The database version is PostgreSQL 12.",
            "The database version is MySQL 8.",
            "The database version is PostgreSQL 13."
=======
            "The database version is PostgreSQL 12."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Disk encryption configuration specific to an instance.\nApplies only to Second Generation instances."
        },
        "diskEncryptionStatus": {
          "$ref": "DiskEncryptionStatus",
          "description": "Disk encryption status specific to an instance.\nApplies only to Second Generation instances."
        },
        "etag": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This field is deprecated and will be removed from a future version of the API. Use the *settings.settingsVersion* field instead.",
=======
          "description": "This field is deprecated and will be removed from a future version of the\nAPI. Use the \u003ccode\u003esettings.settingsVersion\u003c/code\u003e field instead.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "failoverReplica": {
          "description": "The name and status of the failover replica. This property is applicable\nonly to Second Generation instances.",
          "properties": {
            "available": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
              "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.",
=======
              "description": "The availability status of the failover replica. A false status indicates\nthat the failover replica is out of sync. The master can only failover to\nthe failover replica when the status is true.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
              "type": "boolean"
            },
            "name": {
              "description": "The name of the failover replica. If specified at instance creation, a\nfailover replica is created for the instance. The name\ndoesn't include the project ID. This property is applicable only to\nSecond Generation instances.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "gceZone": {
          "description": "The Compute Engine zone that the instance is currently serving from. This\nvalue could be different from the zone that was specified when the instance\nwas created if the instance has failed over to its secondary zone.",
          "type": "string"
        },
        "instanceType": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a primary instance. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.",
=======
          "description": "The instance type. This can be one of the following.\n\u003cbr\u003e\u003ccode\u003eCLOUD_SQL_INSTANCE\u003c/code\u003e: A Cloud SQL instance that is not\nreplicating from a master. \u003cbr\u003e\u003ccode\u003eON_PREMISES_INSTANCE\u003c/code\u003e: An\ninstance running on the\ncustomer's premises. \u003cbr\u003e\u003ccode\u003eREAD_REPLICA_INSTANCE\u003c/code\u003e: A Cloud SQL\ninstance configured as a read-replica.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_INSTANCE_TYPE_UNSPECIFIED",
            "CLOUD_SQL_INSTANCE",
            "ON_PREMISES_INSTANCE",
            "READ_REPLICA_INSTANCE"
          ],
          "enumDescriptions": [
            "This is an unknown Cloud SQL instance type.",
            "A regular Cloud SQL instance.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "An instance running on the customer's premises that is not managed by Cloud SQL.",
=======
            "An instance running on the customer's premises that is not managed by\nCloud SQL.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            "A Cloud SQL instance acting as a read-replica."
          ],
          "type": "string"
        },
        "ipAddresses": {
          "description": "The assigned IP addresses for the instance.",
          "items": {
            "$ref": "IpMapping"
          },
          "type": "array"
        },
        "ipv6Address": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#instance*.",
=======
          "description": "The IPv6 address assigned to the instance. This property is applicable only\nto First Generation instances.",
          "type": "string"
        },
        "kind": {
          "description": "This is always \u003ccode\u003esql#instance\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as primary in the replication setup.",
          "type": "string"
        },
        "maxDiskSize": {
          "description": "The maximum disk size of the instance in bytes.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "Name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "onPremisesConfiguration": {
          "$ref": "OnPremisesConfiguration",
          "description": "Configuration specific to on-premises instances."
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL instance. The Google\napps domain is prefixed if applicable.",
          "type": "string"
        },
        "region": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The geographical region. Can be *us-central* (*FIRST_GEN* instances only) *us-central1* (*SECOND_GEN* instances only) *asia-east1* or *europe-west1*. Defaults to *us-central* or *us-central1* depending on the instance type. The region cannot be changed after instance creation.",
=======
          "description": "The geographical region. Can be \u003ccode\u003eus-central\u003c/code\u003e\n(\u003ccode\u003eFIRST_GEN\u003c/code\u003e instances only), \u003ccode\u003eus-central1\u003c/code\u003e\n(\u003ccode\u003eSECOND_GEN\u003c/code\u003e instances only), \u003ccode\u003easia-east1\u003c/code\u003e or\n\u003ccode\u003eeurope-west1\u003c/code\u003e. Defaults to \u003ccode\u003eus-central\u003c/code\u003e or\n\u003ccode\u003eus-central1\u003c/code\u003e depending on the instance type (First Generation\nor Second Generation). The region can not be changed after instance\ncreation.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "replicaConfiguration": {
          "$ref": "ReplicaConfiguration",
          "description": "Configuration specific to failover replicas and read replicas."
        },
        "replicaNames": {
          "description": "The replicas of the instance.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "rootPassword": {
          "description": "Initial root password. Use only on creation.",
          "type": "string"
        },
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
        "satisfiesPzs": {
          "description": "The status indicating if instance satisfiesPzs. Reserved for future use.",
          "type": "boolean"
        },
=======
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
        "scheduledMaintenance": {
          "$ref": "SqlScheduledMaintenance",
          "description": "The start time of any upcoming scheduled maintenance for this instance."
        },
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
        "secondaryGceZone": {
          "description": "The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone. Reserved for future use.",
          "type": "string"
        },
=======
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "serverCaCert": {
          "$ref": "SslCert",
          "description": "SSL configuration."
        },
        "serviceAccountEmailAddress": {
          "description": "The service account email address assigned to the instance. This property\nis applicable only to Second Generation instances.",
          "type": "string"
        },
        "settings": {
          "$ref": "Settings",
          "description": "The user settings."
        },
        "state": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The current serving state of the Cloud SQL instance. This can be one of the following. *SQL_INSTANCE_STATE_UNSPECIFIED*: The state of the instance is unknown. *RUNNABLE*: The instance is running, or has been stopped by owner. *SUSPENDED*: The instance is not available, for example due to problems with billing. *PENDING_DELETE*: The instance is being deleted. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed.",
=======
          "description": "The current serving state of the Cloud SQL instance. This can be one of the\nfollowing. \u003cbr\u003e\u003ccode\u003eRUNNABLE\u003c/code\u003e: The instance is running, or is ready\nto run when accessed. \u003cbr\u003e\u003ccode\u003eSUSPENDED\u003c/code\u003e: The instance is not\navailable, for example due to problems with billing.\n\u003cbr\u003e\u003ccode\u003ePENDING_CREATE\u003c/code\u003e: The instance is being created.\n\u003cbr\u003e\u003ccode\u003eMAINTENANCE\u003c/code\u003e: The instance is down for maintenance.\n\u003cbr\u003e\u003ccode\u003eFAILED\u003c/code\u003e: The instance creation failed.\n\u003cbr\u003e\u003ccode\u003eUNKNOWN_STATE\u003c/code\u003e: The state of the instance is unknown.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_INSTANCE_STATE_UNSPECIFIED",
            "RUNNABLE",
            "SUSPENDED",
            "PENDING_DELETE",
            "PENDING_CREATE",
            "MAINTENANCE",
            "FAILED"
          ],
          "enumDescriptions": [
            "The state of the instance is unknown.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "The instance is running, or has been stopped by owner.",
            "The instance is not available, for example due to problems with billing.",
            "The instance is being deleted.",
            "The instance is being created.",
            "The instance is down for maintenance.",
            "The creation of the instance failed or a fatal error occurred during maintenance."
=======
            "The instance is running.",
            "The instance is currently offline, but it may run again in the future.",
            "The instance is being deleted.",
            "The instance is being created.",
            "The instance is down for maintenance.",
            "The instance failed to be created."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        },
        "suspensionReason": {
          "description": "If the instance state is SUSPENDED, the reason for the suspension.",
          "enumDescriptions": [
            "This is an unknown suspension reason.",
            "The instance is suspended due to billing issues (e.g., GCP account issue)",
            "The instance is suspended due to illegal content (e.g., child pornography,\ncopyrighted material, etc.).",
            "The instance is causing operational issues (e.g., causing the database\nto crash).",
            "The KMS key used by the instance is either revoked or denied access to"
          ],
          "items": {
            "enum": [
              "SQL_SUSPENSION_REASON_UNSPECIFIED",
              "BILLING_ISSUE",
              "LEGAL_ISSUE",
              "OPERATIONAL_ISSUE",
              "KMS_KEY_ISSUE"
            ],
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "enumDescriptions": [
              "This is an unknown suspension reason.",
              "The instance is suspended due to billing issues (for example:, GCP account issue)",
              "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
              "The instance is causing operational issues (for example:, causing the database to crash).",
              "The KMS key used by the instance is either revoked or denied access to"
            ],
=======
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DatabasesListResponse": {
      "description": "Database list response.",
      "id": "DatabasesListResponse",
      "properties": {
        "items": {
          "description": "List of database resources in the instance.",
          "items": {
            "$ref": "Database"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#databasesList*.",
=======
          "description": "This is always \u003ccode\u003esql#databasesList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "DemoteMasterConfiguration": {
      "description": "Read-replica configuration for connecting to the on-premises primary instance.",
      "id": "DemoteMasterConfiguration",
      "properties": {
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#demoteMasterConfiguration*.",
=======
          "description": "This is always \u003ccode\u003esql#demoteMasterConfiguration\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "mysqlReplicaConfiguration": {
          "$ref": "DemoteMasterMySqlReplicaConfiguration",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory."
=======
          "description": "MySQL specific configuration when replicating from a MySQL on-premises\nmaster. Replication configuration information such as the username,\npassword, certificates, and keys are not stored in the instance metadata.\nThe configuration information is used only to set up the replication\nconnection and is stored by MySQL in a file named \u003ccode\u003emaster.info\u003c/code\u003e\nin the data directory."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
        }
      },
      "type": "object"
    },
    "DemoteMasterContext": {
      "description": "Database instance demote primary instance context.",
      "id": "DemoteMasterContext",
      "properties": {
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#demoteMasterContext*.",
          "type": "string"
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as on-premises primary instance in the replication setup.",
=======
          "description": "This is always \u003ccode\u003esql#demoteMasterContext\u003c/code\u003e.",
          "type": "string"
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as on-premises master in the\nreplication setup.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "replicaConfiguration": {
          "$ref": "DemoteMasterConfiguration",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Configuration specific to read-replicas replicating from the on-premises primary instance."
        },
        "verifyGtidConsistency": {
          "description": "Verify GTID consistency for demote operation. Default value: *True*. Second Generation instances only. Setting this flag to false enables you to bypass GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues.",
=======
          "description": "Configuration specific to read-replicas replicating from the on-premises\nmaster."
        },
        "verifyGtidConsistency": {
          "description": "Verify GTID consistency for demote operation. Default value:\n\u003ccode\u003eTrue\u003c/code\u003e. Second Generation instances only.  Setting this flag to\nfalse enables you to bypass GTID consistency check between on-premises\nmaster and Cloud SQL instance during the demotion operation but also\nexposes you to the risk of future replication failures. Change the value\nonly if you know the reason for the GTID divergence and are confident that\ndoing so will not cause any replication issues.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DemoteMasterMySqlReplicaConfiguration": {
      "description": "Read-replica configuration specific to MySQL databases.",
      "id": "DemoteMasterMySqlReplicaConfiguration",
      "properties": {
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "clientKey": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#demoteMasterMysqlReplicaConfiguration*.",
=======
          "description": "PEM representation of the slave's private key. The corresponsing public key\nis encoded in the client's certificate. The format of the slave's private\nkey can be either PKCS #1 or PKCS #8.",
          "type": "string"
        },
        "kind": {
          "description": "This is always \u003ccode\u003esql#demoteMasterMysqlReplicaConfiguration\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DenyMaintenancePeriod": {
      "description": "Deny Maintenance Periods. This specifies a date range during when all CSA rollout will be denied.",
      "id": "DenyMaintenancePeriod",
      "properties": {
        "endDate": {
          "description": "\"deny maintenance period\" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01",
          "type": "string"
        },
        "startDate": {
          "description": "\"deny maintenance period\" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01",
          "type": "string"
        },
        "time": {
          "description": "Time in UTC when the \"deny maintenance period\" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskEncryptionConfiguration": {
      "description": "Disk encryption configuration for an instance.",
      "id": "DiskEncryptionConfiguration",
      "properties": {
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#diskEncryptionConfiguration*.",
=======
          "description": "This is always \u003ccode\u003esql#diskEncryptionConfiguration\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "kmsKeyName": {
          "description": "Resource name of KMS key for disk encryption",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskEncryptionStatus": {
      "description": "Disk encryption status for an instance.",
      "id": "DiskEncryptionStatus",
      "properties": {
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#diskEncryptionStatus*.",
=======
          "description": "This is always \u003ccode\u003esql#diskEncryptionStatus\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "kmsKeyVersionName": {
          "description": "KMS key version used to encrypt the Cloud SQL instance resource",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportContext": {
      "description": "Database instance export context.",
      "id": "ExportContext",
      "properties": {
        "csvExportOptions": {
          "description": "Options for exporting data as CSV. *MySQL* and *PostgreSQL* instances only.",
          "properties": {
            "selectQuery": {
              "description": "The select query used to extract the data.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "databases": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property. *SQL Server instances:* You must specify one database to be exported, and the *fileType* must be *BAK*.",
=======
          "description": "Databases to be exported. \u003cbr /\u003e \u003cb\u003eMySQL instances:\u003c/b\u003e If\n\u003ccode\u003efileType\u003c/code\u003e is \u003ccode\u003eSQL\u003c/code\u003e and no database is specified, all\ndatabases are exported, except for the \u003ccode\u003emysql\u003c/code\u003e system database.\nIf \u003ccode\u003efileType\u003c/code\u003e is \u003ccode\u003eCSV\u003c/code\u003e, you can specify one database,\neither by using this property or by using the\n\u003ccode\u003ecsvExportOptions.selectQuery\u003c/code\u003e property, which takes precedence\nover this property. \u003cbr /\u003e \u003cb\u003ePostgreSQL instances:\u003c/b\u003e You must specify\none database to be exported. If \u003ccode\u003efileType\u003c/code\u003e is \u003ccode\u003eCSV\u003c/code\u003e,\nthis database must match the one specified in the\n\u003ccode\u003ecsvExportOptions.selectQuery\u003c/code\u003e property.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fileType": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data. *BAK*: The file contains backup data for a SQL Server instance.",
=======
          "description": "The file type for the specified uri. \u003cbr\u003e\u003ccode\u003eSQL\u003c/code\u003e: The file\ncontains SQL statements. \u003cbr\u003e\u003ccode\u003eCSV\u003c/code\u003e: The file contains CSV data.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#exportContext*.",
=======
          "description": "This is always \u003ccode\u003esql#exportContext\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "offload": {
          "description": "Option for export offload.",
          "type": "boolean"
        },
        "sqlExportOptions": {
          "description": "Options for exporting data as SQL statements.",
          "properties": {
            "mysqlExportOptions": {
              "description": "Options for exporting from MySQL.",
              "properties": {
                "masterData": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
                  "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than *1*, --set-gtid-purged is set to OFF.",
=======
                  "description": "Option to include SQL statement required to set up replication.\nIf set to \u003ccode\u003e1\u003c/code\u003e, the dump file includes\n a CHANGE MASTER TO statement with the binary log coordinates.\nIf set to \u003ccode\u003e2\u003c/code\u003e, the CHANGE MASTER TO statement is written as\n a SQL comment, and has no effect.\nAll other values are ignored.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "schemaOnly": {
              "description": "Export only schemas.",
              "type": "boolean"
            },
            "tables": {
              "description": "Tables to export, or that were exported, from the specified database. If\nyou specify tables, specify one and only one database. For PostgreSQL\ninstances, you can specify only one table.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "uri": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs://bucketName/fileName*. If the file already exists, the request succeeds, but the operation fails. If *fileType* is *SQL* and the filename ends with .gz, the contents are compressed.",
=======
          "description": "The path to the file in Google Cloud Storage where the export will be\nstored. The URI is in the form \u003ccode\u003egs:\n//bucketName/fileName\u003c/code\u003e. If the file already exists, the requests\n// succeeds, but the operation fails. If \u003ccode\u003efileType\u003c/code\u003e is\n// \u003ccode\u003eSQL\u003c/code\u003e and the filename ends with .gz, the contents are\n// compressed.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "FailoverContext": {
      "description": "Database instance failover context.",
      "id": "FailoverContext",
      "properties": {
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#failoverContext*.",
=======
          "description": "This is always \u003ccode\u003esql#failoverContext\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "settingsVersion": {
          "description": "The current settings version of this instance. Request will be rejected if\nthis version doesn't match the current settings version.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Flag": {
      "description": "A flag resource.",
      "id": "Flag",
      "properties": {
        "allowedIntValues": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values.",
=======
          "description": "Use this field if only certain integers are accepted. Can be combined\nwith min_value and max_value to add additional values.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "allowedStringValues": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "For *STRING* flags, a list of strings that the value can be set to.",
=======
          "description": "For \u003ccode\u003eSTRING\u003c/code\u003e flags, a list of strings that the value can be set\nto.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "appliesTo": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The database version this flag applies to. Can be *MYSQL_8_0*, *MYSQL_5_6*, or *MYSQL_5_7*.",
=======
          "description": "The database version this flag applies to. Can be \u003ccode\u003eMYSQL_5_5\u003c/code\u003e,\n\u003ccode\u003eMYSQL_5_6\u003c/code\u003e, or \u003ccode\u003eMYSQL_5_7\u003c/code\u003e. \u003ccode\u003eMYSQL_5_7\u003c/code\u003e\nis applicable only to Second Generation instances.",
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12."
          ],
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "items": {
            "enum": [
              "SQL_DATABASE_VERSION_UNSPECIFIED",
              "MYSQL_5_1",
              "MYSQL_5_5",
              "MYSQL_5_6",
              "MYSQL_5_7",
              "POSTGRES_9_6",
              "POSTGRES_11",
              "SQLSERVER_2017_STANDARD",
              "SQLSERVER_2017_ENTERPRISE",
              "SQLSERVER_2017_EXPRESS",
              "SQLSERVER_2017_WEB",
              "POSTGRES_10",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
              "POSTGRES_12",
              "MYSQL_8_0",
              "POSTGRES_13"
            ],
            "enumDescriptions": [
              "This is an unknown database version.",
              "The database version is MySQL 5.1.",
              "The database version is MySQL 5.5.",
              "The database version is MySQL 5.6.",
              "The database version is MySQL 5.7.",
              "The database version is PostgreSQL 9.6.",
              "The database version is PostgreSQL 11.",
              "The database version is SQL Server 2017 Standard.",
              "The database version is SQL Server 2017 Enterprise.",
              "The database version is SQL Server 2017 Express.",
              "The database version is SQL Server 2017 Web.",
              "The database version is PostgreSQL 10.",
              "The database version is PostgreSQL 12.",
              "The database version is MySQL 8.",
              "The database version is PostgreSQL 13."
=======
              "POSTGRES_12"
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            ],
            "type": "string"
          },
          "type": "array"
        },
        "inBeta": {
          "description": "Whether or not the flag is considered in beta.",
          "type": "boolean"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#flag*.",
          "type": "string"
        },
        "maxValue": {
          "description": "For *INTEGER* flags, the maximum allowed value.",
=======
          "description": "This is always \u003ccode\u003esql#flag\u003c/code\u003e.",
          "type": "string"
        },
        "maxValue": {
          "description": "For \u003ccode\u003eINTEGER\u003c/code\u003e flags, the maximum allowed value.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "int64",
          "type": "string"
        },
        "minValue": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "For *INTEGER* flags, the minimum allowed value.",
=======
          "description": "For \u003ccode\u003eINTEGER\u003c/code\u003e flags, the minimum allowed value.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "int64",
          "type": "string"
        },
        "name": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is the name of the flag. Flag names always use underscores, not hyphens, for example: *max_allowed_packet*",
=======
          "description": "This is the name of the flag. Flag names always use underscores, not\nhyphens, e.g. \u003ccode\u003emax_allowed_packet\u003c/code\u003e",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "requiresRestart": {
          "description": "Indicates whether changing this flag will trigger a database restart. Only\napplicable to Second Generation instances.",
          "type": "boolean"
        },
        "type": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The type of the flag. Flags are typed to being *BOOLEAN*, *STRING*, *INTEGER* or *NONE*. *NONE* is used for flags which do not take a value, such as *skip_grant_tables*.",
=======
          "description": "The type of the flag. Flags are typed to being \u003ccode\u003eBOOLEAN\u003c/code\u003e,\n\u003ccode\u003eSTRING\u003c/code\u003e, \u003ccode\u003eINTEGER\u003c/code\u003e or \u003ccode\u003eNONE\u003c/code\u003e.\n\u003ccode\u003eNONE\u003c/code\u003e is used for flags which do not take a value, such as\n\u003ccode\u003eskip_grant_tables\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_FLAG_TYPE_UNSPECIFIED",
            "BOOLEAN",
            "STRING",
            "INTEGER",
            "NONE",
            "MYSQL_TIMEZONE_OFFSET",
            "FLOAT",
            "REPEATED_STRING"
          ],
          "enumDescriptions": [
            "This is an unknown flag type.",
            "Boolean type flag.",
            "String type flag.",
            "Integer type flag.",
            "Flag type used for a server startup option.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "Type introduced specially for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].",
=======
            "Type introduced specically for MySQL TimeZone offset. Accept a string value\nwith the format [-12:59, 13:00].",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            "Float type flag.",
            "Comma-separated list of the strings in a SqlFlagType enum."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlagsListResponse": {
      "description": "Flags list response.",
      "id": "FlagsListResponse",
      "properties": {
        "items": {
          "description": "List of flags.",
          "items": {
            "$ref": "Flag"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#flagsList*.",
=======
          "description": "This is always \u003ccode\u003esql#flagsList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImportContext": {
      "description": "Database instance import context.",
      "id": "ImportContext",
      "properties": {
        "bakImportOptions": {
          "description": "Import parameters specific to SQL Server .BAK files",
          "properties": {
            "encryptionOptions": {
              "properties": {
                "certPath": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
                  "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file.",
=======
                  "description": "Path to the Certificate (.cer) in Cloud Storage, in the form\n\u003ccode\u003egs://bucketName/fileName\u003c/code\u003e. The instance must have\nwrite permissions to the bucket and read access to the file.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
                  "type": "string"
                },
                "pvkPassword": {
                  "description": "Password that encrypts the private key",
                  "type": "string"
                },
                "pvkPath": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
                  "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file.",
=======
                  "description": "Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the\nform \u003ccode\u003egs://bucketName/fileName\u003c/code\u003e. The instance must have\nwrite permissions to the bucket and read access to the file.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "csvImportOptions": {
          "description": "Options for importing data as CSV.",
          "properties": {
            "columns": {
              "description": "The columns to which CSV data is imported. If not specified, all columns\nof the database table are loaded with CSV data.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "table": {
              "description": "The table to which CSV data is imported.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "database": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified.",
          "type": "string"
        },
        "fileType": {
          "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
=======
          "description": "The target database for the import. If \u003ccode\u003efileType\u003c/code\u003e is\n\u003ccode\u003eSQL\u003c/code\u003e, this field is required only if the import file does not\nspecify a database, and is overridden by any database specification in the\nimport file. If \u003ccode\u003efileType\u003c/code\u003e is \u003ccode\u003eCSV\u003c/code\u003e, one database\nmust be specified.",
          "type": "string"
        },
        "fileType": {
          "description": "The file type for the specified uri. \u003cbr\u003e\u003ccode\u003eSQL\u003c/code\u003e: The file\ncontains SQL statements. \u003cbr\u003e\u003ccode\u003eCSV\u003c/code\u003e: The file contains CSV data.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "type": "string"
        },
        "importUser": {
          "description": "The PostgreSQL user for this import operation. PostgreSQL instances only.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#importContext*.",
          "type": "string"
        },
        "uri": {
          "description": "Path to the import file in Cloud Storage, in the form *gs://bucketName/fileName*. Compressed gzip files (.gz) are supported when *fileType* is *SQL*. The instance must have write permissions to the bucket and read access to the file.",
=======
          "description": "This is always \u003ccode\u003esql#importContext\u003c/code\u003e.",
          "type": "string"
        },
        "uri": {
          "description": "Path to the import file in Cloud Storage, in the form\n\u003ccode\u003egs:\n//bucketName/fileName\u003c/code\u003e. Compressed gzip files (.gz) are supported\n// when \u003ccode\u003efileType\u003c/code\u003e is \u003ccode\u003eSQL\u003c/code\u003e. The instance must have\n// write permissions to the bucket and read access to the file.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "InsightsConfig": {
      "description": "Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.",
      "id": "InsightsConfig",
      "properties": {
        "queryInsightsEnabled": {
          "description": "Whether Query Insights feature is enabled.",
          "type": "boolean"
        },
        "queryStringLength": {
          "description": "Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.",
          "format": "int32",
          "type": "integer"
        },
        "recordApplicationTags": {
          "description": "Whether Query Insights will record application tags from query when enabled.",
          "type": "boolean"
        },
        "recordClientAddress": {
          "description": "Whether Query Insights will record client address when enabled.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InstancesCloneRequest": {
      "description": "Database instance clone request.",
      "id": "InstancesCloneRequest",
      "properties": {
        "cloneContext": {
          "$ref": "CloneContext",
          "description": "Contains details about the clone operation."
        }
      },
      "type": "object"
    },
    "InstancesDemoteMasterRequest": {
      "description": "Database demote primary instance request.",
      "id": "InstancesDemoteMasterRequest",
      "properties": {
        "demoteMasterContext": {
          "$ref": "DemoteMasterContext",
          "description": "Contains details about the demoteMaster operation."
        }
      },
      "type": "object"
    },
    "InstancesExportRequest": {
      "description": "Database instance export request.",
      "id": "InstancesExportRequest",
      "properties": {
        "exportContext": {
          "$ref": "ExportContext",
          "description": "Contains details about the export operation."
        }
      },
      "type": "object"
    },
    "InstancesFailoverRequest": {
      "description": "Instance failover request.",
      "id": "InstancesFailoverRequest",
      "properties": {
        "failoverContext": {
          "$ref": "FailoverContext",
          "description": "Failover Context."
        }
      },
      "type": "object"
    },
    "InstancesImportRequest": {
      "description": "Database instance import request.",
      "id": "InstancesImportRequest",
      "properties": {
        "importContext": {
          "$ref": "ImportContext",
          "description": "Contains details about the import operation."
        }
      },
      "type": "object"
    },
    "InstancesListResponse": {
      "description": "Database instances list response.",
      "id": "InstancesListResponse",
      "properties": {
        "items": {
          "description": "List of database instance resources.",
          "items": {
            "$ref": "DatabaseInstance"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#instancesList*.",
=======
          "description": "This is always \u003ccode\u003esql#instancesList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide\nthis value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "warnings": {
          "description": "List of warnings that occurred while handling the request.",
          "items": {
            "$ref": "ApiWarning"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InstancesListServerCasResponse": {
      "description": "Instances ListServerCas response.",
      "id": "InstancesListServerCasResponse",
      "properties": {
        "activeVersion": {
          "type": "string"
        },
        "certs": {
          "description": "List of server CA certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#instancesListServerCas*.",
=======
          "description": "This is always \u003ccode\u003esql#instancesListServerCas\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "InstancesRestoreBackupRequest": {
      "description": "Database instance restore backup request.",
      "id": "InstancesRestoreBackupRequest",
      "properties": {
        "restoreBackupContext": {
          "$ref": "RestoreBackupContext",
          "description": "Parameters required to perform the restore backup operation."
        }
      },
      "type": "object"
    },
    "InstancesRotateServerCaRequest": {
      "description": "Rotate Server CA request.",
      "id": "InstancesRotateServerCaRequest",
      "properties": {
        "rotateServerCaContext": {
          "$ref": "RotateServerCaContext",
          "description": "Contains details about the rotate server CA operation."
        }
      },
      "type": "object"
    },
    "InstancesTruncateLogRequest": {
      "description": "Instance truncate log request.",
      "id": "InstancesTruncateLogRequest",
      "properties": {
        "truncateLogContext": {
          "$ref": "TruncateLogContext",
          "description": "Contains details about the truncate log operation."
        }
      },
      "type": "object"
    },
    "IpConfiguration": {
      "description": "IP Management configuration.",
      "id": "IpConfiguration",
      "properties": {
        "authorizedNetworks": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: *192.168.100.0/24*).",
=======
          "description": "The list of external networks that are allowed to connect to the instance\nusing the IP. In \u003ca\nhref=\"http://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation\"\u003eCIDR\nnotation\u003c/a\u003e, also known as 'slash' notation (e.g.\n\u003ccode\u003e192.168.100.0/24\u003c/code\u003e).",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "items": {
            "$ref": "AclEntry"
          },
          "type": "array"
        },
        "ipv4Enabled": {
          "description": "Whether the instance is assigned a public IP address or not.",
          "type": "boolean"
        },
        "privateNetwork": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, */projects/myProject/global/networks/default*. This setting can be updated, but it cannot be removed after it is set.",
=======
          "description": "The resource link for the VPC network from which the Cloud SQL instance is\naccessible for private IP. For example,\n\u003ccode\u003e/projects/myProject/global/networks/default\u003c/code\u003e. This setting can\nbe updated, but it cannot be removed after it is set.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "requireSsl": {
          "description": "Whether SSL connections over IP are enforced or not.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IpMapping": {
      "description": "Database instance IP Mapping.",
      "id": "IpMapping",
      "properties": {
        "ipAddress": {
          "description": "The IP address assigned.",
          "type": "string"
        },
        "timeToRetire": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The due time for this IP to be retired in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*. This field is only available when the IP is scheduled to be retired.",
=======
          "description": "The due time for this IP to be retired in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e. This field is only available when\nthe IP is scheduled to be retired.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "type": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The type of this IP address. A *PRIMARY* address is a public address that can accept incoming connections. A *PRIVATE* address is a private address that can accept incoming connections. An *OUTGOING* address is the source address of connections originating from the instance, if supported.",
=======
          "description": "The type of this IP address. A \u003ccode\u003ePRIMARY\u003c/code\u003e address is a public\naddress that can accept incoming connections. A \u003ccode\u003ePRIVATE\u003c/code\u003e\naddress is a private address that can accept incoming connections. An\n\u003ccode\u003eOUTGOING\u003c/code\u003e address is the source address of connections\noriginating from the instance, if supported.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
            "PRIMARY",
            "OUTGOING",
            "PRIVATE",
            "MIGRATED_1ST_GEN"
          ],
          "enumDescriptions": [
            "This is an unknown IP address type.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
            "Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.",
            "Private IP used when using private IPs and network peering.",
            "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
=======
            "IP address the customer is supposed to connect to. Usually this is the\nload balancer's IP address",
            "Source IP address of the connection a read replica establishes to its\nexternal master. This IP address can be whitelisted by the customer\nin case it has a firewall that filters incoming connection to its\non premises master.",
            "Private IP used when using private IPs and network peering.",
            "V1 IP of a migrated instance. We want the user to\ndecommission this IP as soon as the migration is complete.\nNote: V1 instances with V1 ip addresses will be counted as PRIMARY."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationPreference": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
      "description": "Preferred location. This specifies where a Cloud SQL instance is located, either in a specific Compute Engine zone, or co-located with an App Engine application. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.",
      "id": "LocationPreference",
      "properties": {
        "followGaeApplication": {
          "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#locationPreference*.",
          "type": "string"
        },
        "secondaryZone": {
          "description": "The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.). Reserved for future use.",
          "type": "string"
        },
        "zone": {
          "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.).",
=======
      "description": "Preferred location. This specifies where a Cloud SQL instance should\npreferably be located, either in a specific Compute Engine zone, or\nco-located with an App Engine application. Note that if the preferred\nlocation is not available, the instance will be located as close as possible\nwithin the region. Only one location may be specified.",
      "id": "LocationPreference",
      "properties": {
        "followGaeApplication": {
          "description": "The AppEngine application to follow, it must be in the same region as the\nCloud SQL instance.",
          "type": "string"
        },
        "kind": {
          "description": "This is always \u003ccode\u003esql#locationPreference\u003c/code\u003e.",
          "type": "string"
        },
        "zone": {
          "description": "The preferred Compute Engine zone (e.g. us-central1-a, us-central1-b,\netc.).",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "MaintenanceWindow": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
      "description": "Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.",
=======
      "description": "Maintenance window. This specifies when a v2 Cloud SQL instance should\npreferably be restarted for system maintenance purposes.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
      "id": "MaintenanceWindow",
      "properties": {
        "day": {
          "description": "day of week (1-7), starting on Monday.",
          "format": "int32",
          "type": "integer"
        },
        "hour": {
          "description": "hour of day - 0 to 23.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#maintenanceWindow*.",
          "type": "string"
        },
        "updateTrack": {
          "description": "Maintenance timing setting: *canary* (Earlier) or *stable* (Later). Learn more.",
=======
          "description": "This is always \u003ccode\u003esql#maintenanceWindow\u003c/code\u003e.",
          "type": "string"
        },
        "updateTrack": {
          "description": "Maintenance timing setting: \u003ccode\u003ecanary\u003c/code\u003e (Earlier) or\n\u003ccode\u003estable\u003c/code\u003e (Later). \u003cbr /\u003e\u003ca\nhref=\"/sql/docs/db_path/instance-settings#maintenance-timing-2ndgen\"\u003e\nLearn more\u003c/a\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_UPDATE_TRACK_UNSPECIFIED",
            "canary",
            "stable"
          ],
          "enumDescriptions": [
            "This is an unknown maintenance timing preference.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
            "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
=======
            "For instance update that requires a restart, this update track indicates\nyour instance prefer to restart for new version early in maintenance\nwindow.",
            "For instance update that requires a restart, this update track indicates\nyour instance prefer to let Cloud SQL choose the timing of restart (within\nits Maintenance window, if applicable)."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MySqlReplicaConfiguration": {
      "description": "Read-replica configuration specific to MySQL databases.",
      "id": "MySqlReplicaConfiguration",
      "properties": {
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "clientKey": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
=======
          "description": "PEM representation of the slave's private key. The corresponsing public key\nis encoded in the client's certificate.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "connectRetryInterval": {
          "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds.",
          "format": "int32",
          "type": "integer"
        },
        "dumpFilePath": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#mysqlReplicaConfiguration*.",
=======
          "description": "Path to a SQL dump file in Google Cloud Storage from which the slave\ninstance is to be created. The URI is in the form gs:\n//bucketName/fileName. Compressed gzip files (.gz) are also supported.\n// Dumps should have the binlog co-ordinates from which replication should\n// begin. This can be accomplished by setting --master-data to 1 when using\n// mysqldump.",
          "type": "string"
        },
        "kind": {
          "description": "This is always \u003ccode\u003esql#mysqlReplicaConfiguration\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "masterHeartbeatPeriod": {
          "description": "Interval in milliseconds between replication heartbeats.",
          "format": "int64",
          "type": "string"
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "sslCipher": {
          "description": "A list of permissible ciphers to use for SSL encryption.",
          "type": "string"
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "verifyServerCertificate": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.",
=======
          "description": "Whether or not to check the master's Common Name value in the certificate\nthat it sends during the SSL handshake.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "OnPremisesConfiguration": {
      "description": "On-premises instance configuration.",
      "id": "OnPremisesConfiguration",
      "properties": {
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "clientCertificate": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
=======
          "description": "PEM representation of the slave's x509 certificate.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the slave's private key. The corresponsing public key\nis encoded in the client's certificate.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "dumpFilePath": {
          "description": "The dump file to create the Cloud SQL replica.",
          "type": "string"
        },
        "hostPort": {
          "description": "The host and port of the on-premises instance in host:port format",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#onPremisesConfiguration*.",
=======
          "description": "This is always \u003ccode\u003esql#onPremisesConfiguration\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "password": {
          "description": "The password for connecting to on-premises instance.",
          "type": "string"
        },
        "username": {
          "description": "The username for connecting to on-premises instance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Operation": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
      "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.",
=======
      "description": "An Operation resource.\u0026nbsp;For successful operations that return an\nOperation resource, only the fields relevant to the operation are populated\nin the resource.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
      "id": "Operation",
      "properties": {
        "backupContext": {
          "$ref": "BackupContext",
          "description": "The context for backup operation, if applicable."
        },
        "endTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The time this operation finished in UTC timezone in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "error": {
          "$ref": "OperationErrors",
          "description": "If errors occurred during processing of this operation, this field will be\npopulated."
        },
        "exportContext": {
          "$ref": "ExportContext",
          "description": "The context for export operation, if applicable."
        },
        "importContext": {
          "$ref": "ImportContext",
          "description": "The context for import operation, if applicable."
        },
        "insertTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The time this operation was enqueued in UTC timezone in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#operation*.",
=======
          "description": "This is always \u003ccode\u003esql#operation\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "name": {
          "description": "An identifier that uniquely identifies the operation. You can use this\nidentifier to retrieve the Operations resource that has information about\nthe operation.",
          "type": "string"
        },
        "operationType": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
=======
          "description": "The type of the operation. Valid values are \u003ccode\u003eCREATE\u003c/code\u003e,\n\u003ccode\u003eDELETE\u003c/code\u003e, \u003ccode\u003eUPDATE\u003c/code\u003e, \u003ccode\u003eRESTART\u003c/code\u003e,\n\u003ccode\u003eIMPORT\u003c/code\u003e, \u003ccode\u003eEXPORT\u003c/code\u003e, \u003ccode\u003eBACKUP_VOLUME\u003c/code\u003e,\n\u003ccode\u003eRESTORE_VOLUME\u003c/code\u003e, \u003ccode\u003eCREATE_USER\u003c/code\u003e,\n\u003ccode\u003eDELETE_USER\u003c/code\u003e, \u003ccode\u003eCREATE_DATABASE\u003c/code\u003e,\n\u003ccode\u003eDELETE_DATABASE\u003c/code\u003e .",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_OPERATION_TYPE_UNSPECIFIED",
            "IMPORT",
            "EXPORT",
            "CREATE",
            "UPDATE",
            "DELETE",
            "RESTART",
            "BACKUP",
            "SNAPSHOT",
            "BACKUP_VOLUME",
            "DELETE_VOLUME",
            "RESTORE_VOLUME",
            "INJECT_USER",
            "CLONE",
            "STOP_REPLICA",
            "START_REPLICA",
            "PROMOTE_REPLICA",
            "CREATE_REPLICA",
            "CREATE_USER",
            "DELETE_USER",
            "UPDATE_USER",
            "CREATE_DATABASE",
            "DELETE_DATABASE",
            "UPDATE_DATABASE",
            "FAILOVER",
            "DELETE_BACKUP",
            "RECREATE_REPLICA",
            "TRUNCATE_LOG",
            "DEMOTE_MASTER",
            "MAINTENANCE",
            "ENABLE_PRIVATE_IP",
            "DEFER_MAINTENANCE",
            "CREATE_CLONE",
            "RESCHEDULE_MAINTENANCE",
            "START_EXTERNAL_SYNC"
          ],
          "enumDescriptions": [
            "Unknown operation type.",
            "Imports data into a Cloud SQL instance.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
=======
            "Exports data from a Cloud SQL instance to a Cloud Storage\nbucket.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            "Creates a new Cloud SQL instance.",
            "Updates the settings of a Cloud SQL instance.",
            "Deletes a Cloud SQL instance.",
            "Restarts the Cloud SQL instance.",
            "",
            "",
            "Performs instance backup.",
            "Deletes an instance backup.",
            "Restores an instance backup.",
            "Injects a privileged user in mysql for MOB instances.",
            "Clones a Cloud SQL instance.",
            "Stops replication on a Cloud SQL read replica instance.",
            "Starts replication on a Cloud SQL read replica instance.",
            "Promotes a Cloud SQL replica instance.",
            "Creates a Cloud SQL replica instance.",
            "Creates a new user in a Cloud SQL instance.",
            "Deletes a user from a Cloud SQL instance.",
            "Updates an existing user in a Cloud SQL instance.",
            "Creates a database in the Cloud SQL instance.",
            "Deletes a database in the Cloud SQL instance.",
            "Updates a database in the Cloud SQL instance.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "Performs failover of an HA-enabled Cloud SQL failover replica.",
            "Deletes the backup taken by a backup run.",
            "",
            "Truncates a general or slow log table in MySQL.",
            "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
            "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
=======
            "Performs failover of an HA-enabled Cloud SQL\nfailover replica.",
            "Deletes the backup taken by a backup run.",
            "",
            "Truncates a general or slow log table in MySQL.",
            "Demotes the stand-alone instance to be a Cloud SQL\nread replica for an external database server.",
            "Indicates that the instance is currently in maintenance. Maintenance\ntypically causes the instance to be unavailable for 1-3 minutes.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            "This field is deprecated, and will be removed in future version of API.",
            "",
            "Creates clone instance.",
            "Reschedule maintenance to another time.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "Starts external sync of a Cloud SQL EM replica to an external primary instance."
=======
            "Starts external sync of a Cloud SQL EM replica to an external master."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "startTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The time this operation actually started in UTC timezone in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "status": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
=======
          "description": "The status of an operation. Valid values are \u003ccode\u003ePENDING\u003c/code\u003e,\n\u003ccode\u003eRUNNING\u003c/code\u003e, \u003ccode\u003eDONE\u003c/code\u003e,\n\u003ccode\u003eSQL_OPERATION_STATUS_UNSPECIFIED\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_OPERATION_STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "enumDescriptions": [
            "The state of the operation is unknown.",
            "The operation has been queued, but has not started yet.",
            "The operation is running.",
            "The operation completed."
          ],
          "type": "string"
        },
        "targetId": {
          "description": "Name of the database instance related to this operation.",
          "type": "string"
        },
        "targetLink": {
          "type": "string"
        },
        "targetProject": {
          "description": "The project ID of the target instance related to this operation.",
          "type": "string"
        },
        "user": {
          "description": "The email address of the user who initiated this operation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationError": {
      "description": "Database instance operation error.",
      "id": "OperationError",
      "properties": {
        "code": {
          "description": "Identifies the specific error that occurred.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#operationError*.",
=======
          "description": "This is always \u003ccode\u003esql#operationError\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "message": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationErrors": {
      "description": "Database instance operation errors list wrapper.",
      "id": "OperationErrors",
      "properties": {
        "errors": {
          "description": "The list of errors encountered while processing this operation.",
          "items": {
            "$ref": "OperationError"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#operationErrors*.",
=======
          "description": "This is always \u003ccode\u003esql#operationErrors\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationsListResponse": {
      "description": "Database instance list operations response.",
      "id": "OperationsListResponse",
      "properties": {
        "items": {
          "description": "List of operation resources.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#operationsList*.",
=======
          "description": "This is always \u003ccode\u003esql#operationsList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide\nthis value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReplicaConfiguration": {
      "description": "Read-replica configuration for connecting to the primary instance.",
      "id": "ReplicaConfiguration",
      "properties": {
        "failoverTarget": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Specifies if the replica is the failover target. If the field is set to *true* the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.",
          "type": "boolean"
        },
        "kind": {
          "description": "This is always *sql#replicaConfiguration*.",
=======
          "description": "Specifies if the replica is the failover target. If the field is set to\n\u003ccode\u003etrue\u003c/code\u003e the replica will be designated as a failover replica. In\ncase the master instance fails, the replica instance will be promoted as\nthe new master instance.  \u003cp\u003eOnly one replica can be specified as failover\ntarget, and the replica has to be in different zone with the master\ninstance.",
          "type": "boolean"
        },
        "kind": {
          "description": "This is always \u003ccode\u003esql#replicaConfiguration\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "mysqlReplicaConfiguration": {
          "$ref": "MySqlReplicaConfiguration",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory."
=======
          "description": "MySQL specific configuration when replicating from a MySQL on-premises\nmaster. Replication configuration information such as the username,\npassword, certificates, and keys are not stored in the instance metadata.\nThe configuration information is used only to set up the replication\nconnection and is stored by MySQL in a file named \u003ccode\u003emaster.info\u003c/code\u003e\nin the data directory."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
        }
      },
      "type": "object"
    },
    "Reschedule": {
      "id": "Reschedule",
      "properties": {
        "rescheduleType": {
          "description": "Required. The type of the reschedule.",
          "enum": [
            "RESCHEDULE_TYPE_UNSPECIFIED",
            "IMMEDIATE",
            "NEXT_AVAILABLE_WINDOW",
            "SPECIFIC_TIME"
          ],
          "enumDescriptions": [
            "",
            "If the user wants to schedule the maintenance to happen now.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "If the user wants to use the existing maintenance policy to find the next available window.",
=======
            "If the user wants to use the existing maintenance policy to find the\nnext available window.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
            "If the user wants to reschedule the maintenance to a specific time."
          ],
          "type": "string"
        },
        "scheduleTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if\nreschedule_type=SPECIFIC_TIME, in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for\nexample \u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestoreBackupContext": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
      "description": "Database instance restore from backup context. Backup context contains source instance id and project id.",
=======
      "description": "Database instance restore from backup context.\nBackup context contains source instance id and project id.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
      "id": "RestoreBackupContext",
      "properties": {
        "backupRunId": {
          "description": "The ID of the backup run to restore from.",
          "format": "int64",
          "type": "string"
        },
        "instanceId": {
          "description": "The ID of the instance that the backup was taken from.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#restoreBackupContext*.",
=======
          "description": "This is always \u003ccode\u003esql#restoreBackupContext\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "project": {
          "description": "The full project ID of the source instance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RotateServerCaContext": {
      "description": "Instance rotate server CA context.",
      "id": "RotateServerCaContext",
      "properties": {
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#rotateServerCaContext*.",
=======
          "description": "This is always \u003ccode\u003esql#rotateServerCaContext\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "nextVersion": {
          "description": "The fingerprint of the next version to be rotated to. If left unspecified,\nwill be rotated to the most recently added server CA version.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Settings": {
      "description": "Database instance settings.",
      "id": "Settings",
      "properties": {
        "activationPolicy": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: *ALWAYS*: The instance is on, and remains so even in the absence of connection requests. *NEVER*: The instance is off; it is not activated, even if a connection request arrives.",
=======
          "description": "The activation policy specifies when the instance is activated; it is\napplicable only when the instance state is \u003ccode\u003eRUNNABLE\u003c/code\u003e. Valid\nvalues: \u003cbr\u003e\u003ccode\u003eALWAYS\u003c/code\u003e: The instance is on, and remains so even in\nthe absence of connection requests. \u003cbr\u003e\u003ccode\u003eNEVER\u003c/code\u003e: The instance is\noff; it is not activated, even if a connection request arrives.\n\u003cbr\u003e\u003ccode\u003eON_DEMAND\u003c/code\u003e: First Generation instances only. The instance\nresponds to incoming requests, and turns itself off when not in use.\nInstances with \u003ccode\u003ePER_USE\u003c/code\u003e pricing turn off after 15 minutes of\ninactivity. Instances with \u003ccode\u003ePER_PACKAGE\u003c/code\u003e pricing turn off after\n12 hours of inactivity.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER",
            "ON_DEMAND"
          ],
          "enumDescriptions": [
            "Unknown activation plan.",
            "The instance is always up and running.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "The instance never starts.",
            "The instance starts upon receiving requests."
=======
            "The instance should never spin up.",
            "The instance spins up upon receiving requests."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        },
        "activeDirectoryConfig": {
          "$ref": "SqlActiveDirectoryConfig",
          "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server."
        },
        "authorizedGaeApplications": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.",
=======
          "description": "The App Engine app IDs that can access this instance. First Generation\ninstances only.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "availabilityType": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Availability type. Potential values: *ZONAL*: The instance serves data from only one zone. Outages in that zone affect data accessibility. *REGIONAL*: The instance can serve data from more than one zone in a region (it is highly available). For more information, see Overview of the High Availability Configuration.",
=======
          "description": "Availability type (PostgreSQL and MySQL instances only). Potential values:\n\u003cbr\u003e\u003ccode\u003eZONAL\u003c/code\u003e: The instance serves data from only one zone.\nOutages in that zone affect data accessibility. \u003cbr\u003e\u003ccode\u003eREGIONAL\u003c/code\u003e:\nThe instance can serve data from more than one zone in a region (it is\nhighly available). \u003cbr\u003eFor more information, see \u003ca\nhref=\"https://cloud.google.com/sql/docs/postgres/high-availability\"\u003eOverview\nof the High Availability Configuration\u003c/a\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal available instance.",
            "Regional available instance."
          ],
          "type": "string"
        },
        "backupConfiguration": {
          "$ref": "BackupConfiguration",
          "description": "The daily backup configuration for the instance."
        },
        "collation": {
          "description": "The name of server Instance collation.",
          "type": "string"
        },
        "crashSafeReplicationEnabled": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances.",
          "type": "boolean"
        },
        "dataDiskSizeGb": {
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB.",
=======
          "description": "Configuration specific to read replica instances. Indicates whether\ndatabase flags for crash-safe replication are enabled. This property is\nonly applicable to First Generation instances.",
          "type": "boolean"
        },
        "dataDiskSizeGb": {
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB. Not used\nfor First Generation instances.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "int64",
          "type": "string"
        },
        "dataDiskType": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The type of data disk: PD_SSD (default) or PD_HDD. Not used for First Generation instances.",
=======
          "description": "The type of data disk: \u003ccode\u003ePD_SSD\u003c/code\u003e (default) or\n\u003ccode\u003ePD_HDD\u003c/code\u003e. Not used for First Generation instances.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD",
            "OBSOLETE_LOCAL_SSD"
          ],
          "enumDescriptions": [
            "This is an unknown data disk type.",
            "An SSD data disk.",
            "An HDD data disk.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "This field is deprecated and will be removed from a future version of the API."
=======
            "This field is deprecated and will be removed from a future version of the\nAPI."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        },
        "databaseFlags": {
          "description": "The database flags passed to the instance at startup.",
          "items": {
            "$ref": "DatabaseFlags"
          },
          "type": "array"
        },
        "databaseReplicationEnabled": {
          "description": "Configuration specific to read replica instances. Indicates whether\nreplication is enabled or not.",
          "type": "boolean"
        },
        "denyMaintenancePeriods": {
          "description": "Deny maintenance periods",
          "items": {
            "$ref": "DenyMaintenancePeriod"
          },
          "type": "array"
        },
        "insightsConfig": {
          "$ref": "InsightsConfig",
          "description": "Insights configuration, for now relevant only for Postgres."
        },
        "ipConfiguration": {
          "$ref": "IpConfiguration",
          "description": "The settings for IP Management. This allows to enable or disable the\ninstance IP and manage which external networks can connect to the instance.\nThe IPv4 address cannot be disabled for Second Generation instances."
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#settings*.",
=======
          "description": "This is always \u003ccode\u003esql#settings\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "locationPreference": {
          "$ref": "LocationPreference",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances."
        },
        "maintenanceWindow": {
          "$ref": "MaintenanceWindow",
          "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes."
        },
        "pricingPlan": {
          "description": "The pricing plan for this instance. This can be either *PER_USE* or *PACKAGE*. Only *PER_USE* is supported for Second Generation instances.",
=======
          "description": "The location preference settings. This allows the instance to be located as\nnear as possible to either an App Engine app or Compute Engine zone for\nbetter performance. App Engine co-location is only applicable to First\nGeneration instances."
        },
        "maintenanceWindow": {
          "$ref": "MaintenanceWindow",
          "description": "The maintenance window for this instance. This specifies when the instance\ncan be restarted for maintenance purposes. Not used for First Generation\ninstances."
        },
        "pricingPlan": {
          "description": "The pricing plan for this instance. This can be either \u003ccode\u003ePER_USE\u003c/code\u003e\nor \u003ccode\u003ePACKAGE\u003c/code\u003e. Only \u003ccode\u003ePER_USE\u003c/code\u003e is supported for Second\nGeneration instances.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_PRICING_PLAN_UNSPECIFIED",
            "PACKAGE",
            "PER_USE"
          ],
          "enumDescriptions": [
            "This is an unknown pricing plan for this instance.",
            "The instance is billed at a monthly flat rate.",
            "The instance is billed per usage."
          ],
          "type": "string"
        },
        "replicationType": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The type of replication this instance uses. This can be either *ASYNCHRONOUS* or *SYNCHRONOUS*. (Deprecated_ This property was only applicable to First Generation instances.",
=======
          "description": "The type of replication this instance uses. This can be either\n\u003ccode\u003eASYNCHRONOUS\u003c/code\u003e or \u003ccode\u003eSYNCHRONOUS\u003c/code\u003e. This property is\nonly applicable to First Generation instances.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "enum": [
            "SQL_REPLICATION_TYPE_UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ],
          "enumDescriptions": [
            "This is an unknown replication type for a Cloud SQL instance.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "The synchronous replication mode for First Generation instances. It is the default value.",
            "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
=======
            "The synchronous replication mode for First Generation instances. It is the\ndefault value.",
            "The asynchronous replication mode for First Generation instances. It\nprovides a slight performance gain, but if an outage occurs while this\noption is set to asynchronous, you can lose up to a few seconds of updates\nto your data."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        },
        "settingsVersion": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.",
=======
          "description": "The version of instance settings. This is a required field for update\nmethod to make sure concurrent updates are handled properly. During update,\nuse the most recent settingsVersion value for this instance and do not try\nto update this value.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "int64",
          "type": "string"
        },
        "storageAutoResize": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Configuration to increase storage size automatically. The default value is true.",
          "type": "boolean"
        },
        "storageAutoResizeLimit": {
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
=======
          "description": "Configuration to increase storage size automatically. The default value is\ntrue. Not used for First Generation instances.",
          "type": "boolean"
        },
        "storageAutoResizeLimit": {
          "description": "The maximum size to which storage capacity can be automatically increased.\nThe default value is 0, which specifies that there is no limit. Not used\nfor First Generation instances.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "int64",
          "type": "string"
        },
        "tier": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The tier (or machine type) for this instance, for example *db-custom-1-3840* .",
=======
          "description": "The tier (or machine type) for this instance, for example\n\u003ccode\u003edb-n1-standard-1\u003c/code\u003e (MySQL instances) or\n\u003ccode\u003edb-custom-1-3840\u003c/code\u003e (PostgreSQL instances). For MySQL instances,\nthis property determines whether the instance is First or Second\nGeneration. For more information, see \u003ca\nhref=\"/sql/docs/db_path/instance-settings\"\u003eInstance Settings\u003c/a\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "userLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-provided labels, represented as a dictionary where each label is a\nsingle key value pair.",
          "type": "object"
        }
      },
      "type": "object"
    },
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
    "SqlActiveDirectoryConfig": {
      "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server.",
      "id": "SqlActiveDirectoryConfig",
      "properties": {
        "domain": {
          "description": "The name of the domain (e.g., mydomain.com).",
          "type": "string"
        },
        "kind": {
          "description": "This is always sql#activeDirectoryConfig.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SqlExternalSyncSettingError": {
      "description": "External primary instance migration setting error/warning.",
=======
    "SqlExternalSyncSettingError": {
      "description": "External master migration setting error.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
      "id": "SqlExternalSyncSettingError",
      "properties": {
        "detail": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "Can be *sql#externalSyncSettingError* or *sql#externalSyncSettingWarning*.",
=======
          "description": "This is always \u003ccode\u003esql#migrationSettingError\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "type": {
          "description": "Identifies the specific error that occurred.",
          "enum": [
            "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "BINLOG_NOT_ENABLED",
            "INCOMPATIBLE_DATABASE_VERSION",
            "REPLICA_ALREADY_SETUP",
            "INSUFFICIENT_PRIVILEGE",
            "UNSUPPORTED_MIGRATION_TYPE",
            "NO_PGLOGICAL_INSTALLED",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "INVALID_LOGGING_SETUP",
            "INVALID_DB_PARAM",
            "UNSUPPORTED_GTID_MODE",
            "SQLSERVER_AGENT_NOT_RUNNING",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER"
=======
            "PGLOGICAL_NODE_ALREADY_EXISTS"
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "Unsupported migration type.",
            "No pglogical extension installed on databases, applicable for postgres.",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions",
            "The value of parameter rds.logical_replication is not set to 1.",
            "The primary instance logging setup doesn't allow EM sync.",
            "The primary instance database parameter setup doesn't allow EM sync.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "SQL Server Agent is not running.",
            "The table definition is not support due to missing primary key or replica identity, applicable for postgres.",
            "The customer has a definer that will break EM setup."
=======
            "pglogical node already exists on databases, applicable for postgres."
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SqlInstancesRescheduleMaintenanceRequestBody": {
      "description": "Reschedule options for maintenance windows.",
      "id": "SqlInstancesRescheduleMaintenanceRequestBody",
      "properties": {
        "reschedule": {
          "$ref": "Reschedule",
          "description": "Required. The type of the reschedule the user wants."
        }
      },
      "type": "object"
    },
    "SqlInstancesVerifyExternalSyncSettingsResponse": {
      "description": "Instance verify external sync settings response.",
      "id": "SqlInstancesVerifyExternalSyncSettingsResponse",
      "properties": {
        "errors": {
          "description": "List of migration violations.",
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#migrationSettingErrorList*.",
          "type": "string"
        },
        "warnings": {
          "description": "List of migration warnings.",
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "type": "array"
=======
          "description": "This is always \u003ccode\u003esql#migrationSettingErrorList\u003c/code\u003e.",
          "type": "string"
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
        }
      },
      "type": "object"
    },
    "SqlScheduledMaintenance": {
      "description": "Any scheduled maintenancce for this instance.",
      "id": "SqlScheduledMaintenance",
      "properties": {
        "canDefer": {
          "type": "boolean"
        },
        "canReschedule": {
          "description": "If the scheduled maintenance can be rescheduled.",
          "type": "boolean"
        },
        "startTime": {
          "description": "The start time of any upcoming scheduled maintenance for this instance.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SqlServerDatabaseDetails": {
      "description": "Represents a Sql Server database on the Cloud SQL instance.",
      "id": "SqlServerDatabaseDetails",
      "properties": {
        "compatibilityLevel": {
          "description": "The version of SQL Server with which the database is to be made compatible",
          "format": "int32",
          "type": "integer"
        },
        "recoveryModel": {
          "description": "The recovery model of a SQL Server database",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SqlServerUserDetails": {
      "description": "Represents a Sql Server user on the Cloud SQL instance.",
      "id": "SqlServerUserDetails",
      "properties": {
        "disabled": {
          "description": "If the user has been disabled",
          "type": "boolean"
        },
        "serverRoles": {
          "description": "The server roles for this user",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SslCert": {
      "description": "SslCerts Resource",
      "id": "SslCert",
      "properties": {
        "cert": {
          "description": "PEM representation.",
          "type": "string"
        },
        "certSerialNumber": {
          "description": "Serial number, as extracted from the certificate.",
          "type": "string"
        },
        "commonName": {
          "description": "User supplied name.  Constrained to [a-zA-Z.-_ ]+.",
          "type": "string"
        },
        "createTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*",
=======
          "description": "The time when the certificate was created in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "expirationTime": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
=======
          "description": "The time when the certificate expires in \u003ca\nhref=\"https://tools.ietf.org/html/rfc3339\"\u003eRFC 3339\u003c/a\u003e format, for example\n\u003ccode\u003e2012-11-15T16:19:00.094Z\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "format": "google-datetime",
          "type": "string"
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#sslCert*.",
=======
          "description": "This is always \u003ccode\u003esql#sslCert\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "sha1Fingerprint": {
          "description": "Sha1 Fingerprint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertDetail": {
      "description": "SslCertDetail.",
      "id": "SslCertDetail",
      "properties": {
        "certInfo": {
          "$ref": "SslCert",
          "description": "The public information about the cert."
        },
        "certPrivateKey": {
          "description": "The private key for the client cert, in pem format.  Keep private in order\nto protect your security.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertsCreateEphemeralRequest": {
      "description": "SslCerts create ephemeral certificate request.",
      "id": "SslCertsCreateEphemeralRequest",
      "properties": {
        "access_token": {
          "description": "Access token to include in the signed certificate.",
          "type": "string"
        },
        "public_key": {
          "description": "PEM encoded public key to include in the signed certificate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertsInsertRequest": {
      "description": "SslCerts insert request.",
      "id": "SslCertsInsertRequest",
      "properties": {
        "commonName": {
          "description": "User supplied name.  Must be a distinct name from the other certificates\nfor this instance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertsInsertResponse": {
      "description": "SslCert insert response.",
      "id": "SslCertsInsertResponse",
      "properties": {
        "clientCert": {
          "$ref": "SslCertDetail",
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The new client certificate and private key."
        },
        "kind": {
          "description": "This is always *sql#sslCertsInsert*.",
=======
          "description": "The new client certificate and private key.  For First Generation\ninstances, the new certificate does not take effect until the instance is\nrestarted."
        },
        "kind": {
          "description": "This is always \u003ccode\u003esql#sslCertsInsert\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "operation": {
          "$ref": "Operation",
          "description": "The operation to track the ssl certs insert request."
        },
        "serverCaCert": {
          "$ref": "SslCert",
          "description": "The server Certificate Authority's certificate.  If this is missing you can\nforce a new one to be generated by calling resetSslConfig method on\ninstances resource."
        }
      },
      "type": "object"
    },
    "SslCertsListResponse": {
      "description": "SslCerts list response.",
      "id": "SslCertsListResponse",
      "properties": {
        "items": {
          "description": "List of client certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#sslCertsList*.",
=======
          "description": "This is always \u003ccode\u003esql#sslCertsList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "Tier": {
      "description": "A Google Cloud SQL service tier resource.",
      "id": "Tier",
      "properties": {
        "DiskQuota": {
          "description": "The maximum disk size of this tier in bytes.",
          "format": "int64",
          "type": "string"
        },
        "RAM": {
          "description": "The maximum RAM usage of this tier in bytes.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#tier*.",
=======
          "description": "This is always \u003ccode\u003esql#tier\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "region": {
          "description": "The applicable regions for this tier.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tier": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "An identifier for the machine type, for example, db-custom-1-3840. For related information, see Pricing.",
=======
          "description": "An identifier for the machine type, for example, db-n1-standard-1. For\nrelated information, see \u003ca href=\"/sql/pricing\"\u003ePricing\u003c/a\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "TiersListResponse": {
      "description": "Tiers list response.",
      "id": "TiersListResponse",
      "properties": {
        "items": {
          "description": "List of tiers.",
          "items": {
            "$ref": "Tier"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#tiersList*.",
=======
          "description": "This is always \u003ccode\u003esql#tiersList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "TruncateLogContext": {
      "description": "Database Instance truncate log context.",
      "id": "TruncateLogContext",
      "properties": {
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#truncateLogContext*.",
          "type": "string"
        },
        "logType": {
          "description": "The type of log to truncate. Valid values are *MYSQL_GENERAL_TABLE* and *MYSQL_SLOW_TABLE*.",
=======
          "description": "This is always \u003ccode\u003esql#truncateLogContext\u003c/code\u003e.",
          "type": "string"
        },
        "logType": {
          "description": "The type of log to truncate. Valid values are\n\u003ccode\u003eMYSQL_GENERAL_TABLE\u003c/code\u003e and \u003ccode\u003eMYSQL_SLOW_TABLE\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "description": "A Cloud SQL user resource.",
      "id": "User",
      "properties": {
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the\nAPI.",
          "type": "string"
        },
        "host": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion.",
          "type": "string"
        },
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#user*.",
          "type": "string"
        },
        "name": {
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL.",
=======
          "description": "The host name from which the user can connect. For \u003ccode\u003einsert\u003c/code\u003e\noperations, host defaults to an empty string. For \u003ccode\u003eupdate\u003c/code\u003e\noperations, host is specified as part of the request URL. The host name\ncannot be updated after insertion.",
          "type": "string"
        },
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID.\nCan be omitted for \u003ccode\u003eupdate\u003c/code\u003e since it is already specified on the\nURL.",
          "type": "string"
        },
        "kind": {
          "description": "This is always \u003ccode\u003esql#user\u003c/code\u003e.",
          "type": "string"
        },
        "name": {
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for\n\u003ccode\u003eupdate\u003c/code\u003e since it is already specified in the URL.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "password": {
          "description": "The password for the user.",
          "type": "string"
        },
        "project": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL.",
          "type": "string"
        },
        "sqlserverUserDetails": {
          "$ref": "SqlServerUserDetails"
        },
        "type": {
          "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
          "enum": [
            "BUILT_IN",
            "CLOUD_IAM_USER",
            "CLOUD_IAM_SERVICE_ACCOUNT"
          ],
          "enumDescriptions": [
            "The database's built-in user type.",
            "Cloud IAM user.",
            "Cloud IAM service account."
          ],
=======
          "description": "The project ID of the project containing the Cloud SQL database. The Google\napps domain is prefixed if applicable. Can be omitted for\n\u003ccode\u003eupdate\u003c/code\u003e since it is already specified on the URL.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "sqlserverUserDetails": {
          "$ref": "SqlServerUserDetails"
        }
      },
      "type": "object"
    },
    "UsersListResponse": {
      "description": "User list response.",
      "id": "UsersListResponse",
      "properties": {
        "items": {
          "description": "List of user resources in the instance.",
          "items": {
            "$ref": "User"
          },
          "type": "array"
        },
        "kind": {
<<<<<<< HEAD:gen/model/sqladmin/v1beta4/sqladmin-api.json
          "description": "This is always *sql#usersList*.",
=======
          "description": "This is always \u003ccode\u003esql#usersList\u003c/code\u003e.",
>>>>>>> upstream/main:configs/models/sql/v1beta4/sql-api.json
          "type": "string"
        },
        "nextPageToken": {
          "description": "An identifier that uniquely identifies the operation. You can use this\nidentifier to retrieve the Operations resource that has information about\nthe operation.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "servicePath": "",
  "title": "Cloud SQL Admin API",
  "version": "v1beta4"
}