{-# LANGUAGE DataKinds          #-}
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE FlexibleInstances  #-}
{-# LANGUAGE NoImplicitPrelude  #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}
{-# LANGUAGE TypeOperators      #-}

{-# OPTIONS_GHC -fno-warn-duplicate-exports #-}
{-# OPTIONS_GHC -fno-warn-unused-binds      #-}
{-# OPTIONS_GHC -fno-warn-unused-imports    #-}

-- |
-- Module      : Network.Google.Resource.Healthcare.Projects.Locations.DataSets.FhirStores.Fhir.PatientEverything
-- Copyright   : (c) 2015-2016 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Retrieves all the resources in the patient compartment for a \`Patient\`
-- resource. Implements the FHIR extended operation
-- [Patient-everything](http:\/\/hl7.org\/implement\/standards\/fhir\/STU3\/patient-operations.html#everything).
-- On success, the response body will contain a JSON-encoded representation
-- of a \`Bundle\` resource of type \`searchset\`, containing the results
-- of the operation. Errors generated by the FHIR store will contain a
-- JSON-encoded \`OperationOutcome\` resource describing the reason for the
-- error. If the request cannot be mapped to a valid API method on a FHIR
-- store, a generic GCP error might be returned instead.
--
-- /See:/ <https://cloud.google.com/healthcare Cloud Healthcare API Reference> for @healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything@.
module Network.Google.Resource.Healthcare.Projects.Locations.DataSets.FhirStores.Fhir.PatientEverything
    (
    -- * REST Resource
      ProjectsLocationsDataSetsFhirStoresFhirPatientEverythingResource

    -- * Creating a Request
    , projectsLocationsDataSetsFhirStoresFhirPatientEverything
    , ProjectsLocationsDataSetsFhirStoresFhirPatientEverything

    -- * Request Lenses
    , pldsfsfpeXgafv
    , pldsfsfpeUploadProtocol
    , pldsfsfpeAccessToken
    , pldsfsfpeStart
    , pldsfsfpeUploadType
    , pldsfsfpeName
    , pldsfsfpeEnd
    , pldsfsfpeCallback
    ) where

import Network.Google.Healthcare.Types
import Network.Google.Prelude

-- | A resource alias for @healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything@ method which the
-- 'ProjectsLocationsDataSetsFhirStoresFhirPatientEverything' request conforms to.
type ProjectsLocationsDataSetsFhirStoresFhirPatientEverythingResource
     =
     "v1beta1" :>
       Capture "name" Text :>
         "$everything" :>
           QueryParam "$.xgafv" Xgafv :>
             QueryParam "upload_protocol" Text :>
               QueryParam "access_token" Text :>
                 QueryParam "start" Text :>
                   QueryParam "uploadType" Text :>
                     QueryParam "end" Text :>
                       QueryParam "callback" Text :>
                         QueryParam "alt" AltJSON :> Get '[JSON] HTTPBody

-- | Retrieves all the resources in the patient compartment for a \`Patient\`
-- resource. Implements the FHIR extended operation
-- [Patient-everything](http:\/\/hl7.org\/implement\/standards\/fhir\/STU3\/patient-operations.html#everything).
-- On success, the response body will contain a JSON-encoded representation
-- of a \`Bundle\` resource of type \`searchset\`, containing the results
-- of the operation. Errors generated by the FHIR store will contain a
-- JSON-encoded \`OperationOutcome\` resource describing the reason for the
-- error. If the request cannot be mapped to a valid API method on a FHIR
-- store, a generic GCP error might be returned instead.
--
-- /See:/ 'projectsLocationsDataSetsFhirStoresFhirPatientEverything' smart constructor.
data ProjectsLocationsDataSetsFhirStoresFhirPatientEverything =
  ProjectsLocationsDataSetsFhirStoresFhirPatientEverything'
    { _pldsfsfpeXgafv :: !(Maybe Xgafv)
    , _pldsfsfpeUploadProtocol :: !(Maybe Text)
    , _pldsfsfpeAccessToken :: !(Maybe Text)
    , _pldsfsfpeStart :: !(Maybe Text)
    , _pldsfsfpeUploadType :: !(Maybe Text)
    , _pldsfsfpeName :: !Text
    , _pldsfsfpeEnd :: !(Maybe Text)
    , _pldsfsfpeCallback :: !(Maybe Text)
    }
  deriving (Eq, Show, Data, Typeable, Generic)


-- | Creates a value of 'ProjectsLocationsDataSetsFhirStoresFhirPatientEverything' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'pldsfsfpeXgafv'
--
-- * 'pldsfsfpeUploadProtocol'
--
-- * 'pldsfsfpeAccessToken'
--
-- * 'pldsfsfpeStart'
--
-- * 'pldsfsfpeUploadType'
--
-- * 'pldsfsfpeName'
--
-- * 'pldsfsfpeEnd'
--
-- * 'pldsfsfpeCallback'
projectsLocationsDataSetsFhirStoresFhirPatientEverything
    :: Text -- ^ 'pldsfsfpeName'
    -> ProjectsLocationsDataSetsFhirStoresFhirPatientEverything
projectsLocationsDataSetsFhirStoresFhirPatientEverything pPldsfsfpeName_ =
  ProjectsLocationsDataSetsFhirStoresFhirPatientEverything'
    { _pldsfsfpeXgafv = Nothing
    , _pldsfsfpeUploadProtocol = Nothing
    , _pldsfsfpeAccessToken = Nothing
    , _pldsfsfpeStart = Nothing
    , _pldsfsfpeUploadType = Nothing
    , _pldsfsfpeName = pPldsfsfpeName_
    , _pldsfsfpeEnd = Nothing
    , _pldsfsfpeCallback = Nothing
    }


-- | V1 error format.
pldsfsfpeXgafv :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything (Maybe Xgafv)
pldsfsfpeXgafv
  = lens _pldsfsfpeXgafv
      (\ s a -> s{_pldsfsfpeXgafv = a})

-- | Upload protocol for media (e.g. \"raw\", \"multipart\").
pldsfsfpeUploadProtocol :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything (Maybe Text)
pldsfsfpeUploadProtocol
  = lens _pldsfsfpeUploadProtocol
      (\ s a -> s{_pldsfsfpeUploadProtocol = a})

-- | OAuth access token.
pldsfsfpeAccessToken :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything (Maybe Text)
pldsfsfpeAccessToken
  = lens _pldsfsfpeAccessToken
      (\ s a -> s{_pldsfsfpeAccessToken = a})

-- | The response includes records subsequent to the start date. If no start
-- date is provided, all records prior to the end date are in scope.
pldsfsfpeStart :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything (Maybe Text)
pldsfsfpeStart
  = lens _pldsfsfpeStart
      (\ s a -> s{_pldsfsfpeStart = a})

-- | Legacy upload protocol for media (e.g. \"media\", \"multipart\").
pldsfsfpeUploadType :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything (Maybe Text)
pldsfsfpeUploadType
  = lens _pldsfsfpeUploadType
      (\ s a -> s{_pldsfsfpeUploadType = a})

-- | Name of the \`Patient\` resource for which the information is required.
pldsfsfpeName :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything Text
pldsfsfpeName
  = lens _pldsfsfpeName
      (\ s a -> s{_pldsfsfpeName = a})

-- | The response includes records prior to the end date. If no end date is
-- provided, all records subsequent to the start date are in scope.
pldsfsfpeEnd :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything (Maybe Text)
pldsfsfpeEnd
  = lens _pldsfsfpeEnd (\ s a -> s{_pldsfsfpeEnd = a})

-- | JSONP
pldsfsfpeCallback :: Lens' ProjectsLocationsDataSetsFhirStoresFhirPatientEverything (Maybe Text)
pldsfsfpeCallback
  = lens _pldsfsfpeCallback
      (\ s a -> s{_pldsfsfpeCallback = a})

instance GoogleRequest
           ProjectsLocationsDataSetsFhirStoresFhirPatientEverything
         where
        type Rs
               ProjectsLocationsDataSetsFhirStoresFhirPatientEverything
             = HTTPBody
        type Scopes
               ProjectsLocationsDataSetsFhirStoresFhirPatientEverything
             = '["https://www.googleapis.com/auth/cloud-platform"]
        requestClient
          ProjectsLocationsDataSetsFhirStoresFhirPatientEverything'{..}
          = go _pldsfsfpeName _pldsfsfpeXgafv
              _pldsfsfpeUploadProtocol
              _pldsfsfpeAccessToken
              _pldsfsfpeStart
              _pldsfsfpeUploadType
              _pldsfsfpeEnd
              _pldsfsfpeCallback
              (Just AltJSON)
              healthcareService
          where go
                  = buildClient
                      (Proxy ::
                         Proxy
                           ProjectsLocationsDataSetsFhirStoresFhirPatientEverythingResource)
                      mempty
